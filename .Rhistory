facet_wrap(~`Province/State`) +
geom_bar(stat = 'identity') + coord_flip()
library(tidyverse)
library(data.table)
d <- fread("https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_daily_reports/03-05-2020.csv")
d %>% filter(`Country/Region` ==  "US") %>% ggplot(mapping = aes(x = `Country/Region`,y = Confirmed)) +
facet_wrap(~`Province/State`) +
geom_bar(stat = 'identity') + coord_flip()
View(d)
d$Confirmed %>% sum
library(tidyverse)
library(data.table)
####################################################################3333333333
# downloads all data from 1-22-2020 to 3-5-2020
h <- list()
todayInMarch <- as.numeric(substring(date(),9,10))
day <- 22:31
count <- 1
for(d in day){
url <- str_c("https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_daily_reports/01-",d,"-2020.csv")
print(url)
h[[count]] <- fread(url)
count <- count+1
}
day <- c(str_c("0",1:9),10:29)
for(d in day){
url <- str_c("https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_daily_reports/02-",d,"-2020.csv")
print(url)
h[[count]] <- fread(url)
count <- count+1
}
day <- str_c("0",1:(todayInMarch-1))
source('C:/Users/Anantha/R/Personal/COVID-19-Analysis/Analysis.R')
p + geom_line(mapping = aes(color = `Rate Type`),size = 1) +
labs(x = "Days since January 22nd 2020",
y = "Number of people worldwide",
title = "Increase in Infection, Recovery, and Mortatilty Rate")
p <- ggplot(mapping = aes(x = day, y = value))
p
#In US
domestic %>% ggplot(mapping = aes(x = day,color = `Rate Type`)) +
geom_line(mapping = aes(y = value),size = 1) +
labs(x = "Days since January 22nd 2020",
y = "Number of people in US",
title = "Increase in Infection, Recovery, and Mortatilty Rate in US")
source('C:/Users/Anantha/R/Personal/COVID-19-Analysis/Analysis.R')
dayInMarch
todayInMarch
#Plots
#Worldwide
worldwide %>% ggplot(mapping = aes(x = day,y = value)) +
geom_line(mapping = aes(color = `Rate Type`),size = 1) +
labs(x = "Days since January 22nd 2020",
y = "Number of people worldwide",
title = "Increase in Infection, Recovery, and Mortatilty Rate")
#Plots
#Worldwide
worldwide %>% ggplot(mapping = aes(x = day,y = value)) +
geom_line(mapping = aes(color = `Rate Type`),size = 1) +
labs(x = "Days since January 22nd 2020",
y = "Number of people worldwide",
title = "Increase in Infection, Recovery, and Mortatilty Rate")
#not in China
p <- nC %>% ggplot(mapping = aes(x = day,color = `Rate Type`))
p + geom_line(mapping = aes(y = value),size = 1) +
labs(x = "Days since January 22nd 2020",
y = "Number of people worldwide",
title = "Increase in Infection, Recovery, and Mortatilty Rate Outside China")
p + geom_line(mapping = aes(y = log(value)),size = 0.8) +
labs(x = "Days since January 22nd 2020",
y = "Log Number of people worldwide",
title = "Log Increase in Infection, Recovery, and Mortatilty Rate in US")
#In US
domestic %>% ggplot(mapping = aes(x = day,color = `Rate Type`)) +
geom_line(mapping = aes(y = value),size = 1) +
labs(x = "Days since January 22nd 2020",
y = "Number of people in US",
title = "Increase in Infection, Recovery, and Mortatilty Rate in US")
#In US
p <- domestic %>% ggplot(mapping = aes(x = day,color = `Rate Type`))
p + geom_line(mapping = aes(y = value),size = 1) +
labs(x = "Days since January 22nd 2020",
y = "Number of people in US",
title = "Increase in Infection, Recovery, and Mortatilty Rate in US")
p + geom_line(mapping = aes(y = log(value)),size = 1) +
labs(x = "Days since January 22nd 2020",
y = "Log Number of people in US",
title = "Increase in Infection, Recovery, and Mortatilty Rate in US")
p + geom_line(mapping = aes(y = value),size = 1) +
labs(x = "Days since January 22nd 2020",
y = "Number of people in US",
title = "Increase in Infection, Recovery, and Mortatilty Rate in US")
USconfirmed <- US %>% filter(`Rate Type` == "confirms")
USconfirmed <- inUS %>% filter(`Rate Type` == "confirms")
View(inUS)
USrates <- c()
for(i in 1:(nrow(inUS)-1)){
USrates[i] <- (inUS$confirms[i+1]/inUS$confirms[i])
}
USrates
mean(USrates)
h[[length(h)]]['Confirmed'] %>% sum
h[[length(h)]][['Confirmed']] %>% sum
h[[length(h)]][['Deaths']] %>% sum
for(i in 1:(nrow(inUS)-1)){
USrates[i] <- (inUS$confirms[i+1]/inUS$confirms[i])
}
mean(USrates)
USrates[(length(USrates)-14):length(USrates)]
USrates
nrow(inUS)
USrates[(length(USrates)-14):length(USrates)] -> last2Weeks
mean(last2Weeks)
inUS$confirms %>% sum
inUS$confirms %>% max
View(inUS)
#########################################################################
inItaly <- data.frame()
for(i in h){
if(is_empty(inItaly)){
inUS <- i %>% filter(grepl("Italy",i[['Country/Region']])) %>%  summarize(confirms = sum(Confirmed,na.rm = T),
deaths = sum(Deaths,na.rm = T),
recovers = sum(Recovered,na.rm = T))
} else{
inUS <- inUS %>% rbind(i %>% filter(grepl("Italy",i[['Country/Region']])) %>%
summarize(confirms = sum(Confirmed,na.rm = T),
deaths = sum(Deaths,na.rm = T),
recovers = sum(Recovered,na.rm = T)))
}
}
inItaly <- inItaly %>% mutate(day = 1:nrow(inItaly))
inItaly <- inItaly %>% select(day,confirms,deaths,recovers)
domesticItaly <- inItaly %>% pivot_longer(cols = c("confirms","deaths","recovers"),names_to = "Rate Type")
ULT %>% View
#########################################################################
inItaly <- data.frame()
for(i in h){
if(is_empty(inItaly)){
inItaly <- i %>% filter(grepl("Italy",i[['Country/Region']])) %>%  summarize(confirms = sum(Confirmed,na.rm = T),
deaths = sum(Deaths,na.rm = T),
recovers = sum(Recovered,na.rm = T))
} else{
inItaly <- inItaly %>% rbind(i %>% filter(grepl("Italy",i[['Country/Region']])) %>%
summarize(confirms = sum(Confirmed,na.rm = T),
deaths = sum(Deaths,na.rm = T),
recovers = sum(Recovered,na.rm = T)))
}
}
inItaly <- inItaly %>% mutate(day = 1:nrow(inItaly))
inItaly <- inItaly %>% select(day,confirms,deaths,recovers)
domesticItaly <- inItaly %>% pivot_longer(cols = c("confirms","deaths","recovers"),names_to = "Rate Type")
i %>% filter(grepl("Italy",i[['Country/Region']])) %>%  summarize(confirms = sum(Confirmed,na.rm = T),
deaths = sum(Deaths,na.rm = T),
recovers = sum(Recovered,na.rm = T))
#In Italy
domesticItaly %>% ggplot(mapping = aes(x = day,color = `RateType`)) +
geom_line(mapping = aes(y = value),size = 1) +
labs(x = "Days since January 22nd 2020",
y = "Number of people in Italy",
title = "Increase in Infection, Recovery, and Mortatilty Rate in Italy")
#In Italy
domesticItaly %>% ggplot(mapping = aes(x = day,color = `Rate Type`)) +
geom_line(mapping = aes(y = value),size = 1) +
labs(x = "Days since January 22nd 2020",
y = "Number of people in Italy",
title = "Increase in Infection, Recovery, and Mortatilty Rate in Italy")
domesticItaly %>% ggplot(mapping = aes(x = day,color = `Rate Type`)) +
geom_line(mapping = aes(y = log(value)),size = 1) +
labs(x = "Days since January 22nd 2020",
y = " Log Number of people in Italy",
title = "Increase in Infection, Recovery, and Mortatilty Rate in Italy")
print(str_c("Cases as of:  ", date()))
# Original data
hist(faithful$eruptions,main="Density estimate of the variable waiting",col = "darkorange")
median(faithful$eruptions)
mean(faithful$eruptions)
# Original data
hist(faithful$eruptions,main="Density estimate of the variable waiting",col = "darkorange")
f.eruptionSmall<-subset(faithful,faithful$eruptions<=2) # dataframe contain eruption and waiting for small values
n1=nrow(f.eruptionSmall)
f.eruptionLarge<-subset(faithful,faithful$eruptions>4) # dataframe contain eruption and waiting for large values
n2=nrow(f.eruptionLarge)
# Estimating parameters: waiting
mean.eruptionSmall<-mean( f.eruptionSmall$eruptions)
sd.eruptionSmall<-sd(f.eruptionSmall$eruptions)
mean.eruptionLarge<-mean(f.eruptionLarge$eruptions)
sd.eruptionLarge<-sd( f.eruptionLarge$eruptions)
cat("The mean for small values is:",mean.eruptionSmall, "\n")
# normal simulation: Waiting
fsim.eruptionSmall<-rnorm(n=n1,mean=mean.eruptionSmall ,sd=sd.eruptionSmall )
fsim.eruptionLarge<-rnorm(n=n2,mean=mean.eruptionLarge ,sd=sd.eruptionLarge )
# binding the two vectors
fsim.eruption<-c(fsim.eruptionSmall,fsim.waitingLarge)
# Original data
hist(faithful$eruptions,main="Density estimate of the variable waiting",col = "darkorange")
f.eruptionSmall<-subset(faithful,faithful$eruptions<=2) # dataframe contain eruption and waiting for small values
n1=nrow(f.eruptionSmall)
f.eruptionLarge<-subset(faithful,faithful$eruptions>4) # dataframe contain eruption and waiting for large values
n2=nrow(f.eruptionLarge)
# Estimating parameters: waiting
mean.eruptionSmall<-mean( f.eruptionSmall$eruptions)
sd.eruptionSmall<-sd(f.eruptionSmall$eruptions)
mean.eruptionLarge<-mean(f.eruptionLarge$eruptions)
sd.eruptionLarge<-sd( f.eruptionLarge$eruptions)
cat("The mean for small values is:",mean.eruptionSmall, "\n")
# normal simulation: Waiting
fsim.eruptionSmall<-rnorm(n=n1,mean=mean.eruptionSmall ,sd=sd.eruptionSmall )
fsim.eruptionLarge<-rnorm(n=n2,mean=mean.eruptionLarge ,sd=sd.eruptionLarge )
# binding the two vectors
fsim.eruption<-c(fsim.eruptionSmall,fsim.eruptionLarge)
# fsim.waiting<-as.vector(rbind(fsim.waitingSmall,fsim.waitingLarge))
length(fsim.waiting)
# Original data
hist(faithful$eruptions,main="Density estimate of the variable waiting",col = "darkorange")
f.eruptionSmall<-subset(faithful,faithful$eruptions<=2) # dataframe contain eruption and waiting for small values
n1=nrow(f.eruptionSmall)
f.eruptionLarge<-subset(faithful,faithful$eruptions>4) # dataframe contain eruption and waiting for large values
n2=nrow(f.eruptionLarge)
# Estimating parameters: waiting
mean.eruptionSmall<-mean( f.eruptionSmall$eruptions)
sd.eruptionSmall<-sd(f.eruptionSmall$eruptions)
mean.eruptionLarge<-mean(f.eruptionLarge$eruptions)
sd.eruptionLarge<-sd( f.eruptionLarge$eruptions)
cat("The mean for small values is:",mean.eruptionSmall, "\n")
# normal simulation: Waiting
fsim.eruptionSmall<-rnorm(n=n1,mean=mean.eruptionSmall ,sd=sd.eruptionSmall )
fsim.eruptionLarge<-rnorm(n=n2,mean=mean.eruptionLarge ,sd=sd.eruptionLarge )
# binding the two vectors
fsim.eruption<-c(fsim.eruptionSmall,fsim.eruptionLarge)
# fsim.waiting<-as.vector(rbind(fsim.waitingSmall,fsim.waitingLarge))
length(fsim.eruption)
nrow(faithful)
n1+n2
par(mfrow=c(1,2))
hist(fsim.eruption,col = "darkorange")
hist(faithful$eruption,col = "orange")
length(fsim.eruption)
# Original data
hist(faithful$eruptions,main="Density estimate of the variable waiting",col = "darkorange")
f.eruptionSmall<-subset(faithful,faithful$eruptions<=2) # dataframe contain eruption and waiting for small values
n1=nrow(f.eruptionSmall)
f.eruptionLarge<-subset(faithful,faithful$eruptions>4) # dataframe contain eruption and waiting for large values
n2=nrow(f.eruptionLarge)
# Estimating parameters: waiting
mean.eruptionSmall<-mean( f.eruptionSmall$eruptions)
sd.eruptionSmall<-sd(f.eruptionSmall$eruptions)
mean.eruptionLarge<-mean(f.eruptionLarge$eruptions)
sd.eruptionLarge<-sd( f.eruptionLarge$eruptions)
cat("The mean for small values is:",mean.eruptionSmall, "\n")
# normal simulation: Waiting
fsim.eruptionSmall<-rnorm(n=n1,mean=mean.eruptionSmall ,sd=sd.eruptionSmall )
fsim.eruptionLarge<-rnorm(n=n2,mean=mean.eruptionLarge ,sd=sd.eruptionLarge )
# binding the two vectors
fsim.eruption<-c(fsim.eruptionSmall,fsim.eruptionLarge)
# fsim.waiting<-as.vector(rbind(fsim.waitingSmall,fsim.waitingLarge))
length(fsim.eruption)
nrow(faithful)
n1+n2
par(mfrow=c(1,2))
hist(fsim.eruption,col = "darkorange")
hist(faithful$eruption,col = "orange")
length(fsim.eruption)
# Original data
hist(faithful$eruptions,main="Density estimate of the variable waiting",col = "darkorange")
f.eruptionSmall<-subset(faithful,faithful$eruptions<=3.5) # dataframe contain eruption and waiting for small values
n1=nrow(f.eruptionSmall)
f.eruptionLarge<-subset(faithful,faithful$eruptions>3.5) # dataframe contain eruption and waiting for large values
n2=nrow(f.eruptionLarge)
# Estimating parameters: waiting
mean.eruptionSmall<-mean( f.eruptionSmall$eruptions)
sd.eruptionSmall<-sd(f.eruptionSmall$eruptions)
mean.eruptionLarge<-mean(f.eruptionLarge$eruptions)
sd.eruptionLarge<-sd( f.eruptionLarge$eruptions)
cat("The mean for small values is:",mean.eruptionSmall, "\n")
# normal simulation: Waiting
fsim.eruptionSmall<-rnorm(n=n1,mean=mean.eruptionSmall ,sd=sd.eruptionSmall )
fsim.eruptionLarge<-rnorm(n=n2,mean=mean.eruptionLarge ,sd=sd.eruptionLarge )
# binding the two vectors
fsim.eruption<-c(fsim.eruptionSmall,fsim.eruptionLarge)
# fsim.waiting<-as.vector(rbind(fsim.waitingSmall,fsim.waitingLarge))
length(fsim.eruption)
nrow(faithful)
n1+n2
par(mfrow=c(1,2))
hist(fsim.eruption,col = "darkorange")
hist(faithful$eruption,col = "orange")
length(fsim.eruption)
# Original data
hist(faithful$eruptions,main="Density estimate of the variable waiting",col = "darkorange")
source('C:/Users/Anantha/R/Personal/COVID-19-Analysis/Analysis.R')
todayiM
todayInMarch
source('C:/Users/Anantha/R/Personal/COVID-19-Analysis/Analysis.R')
h[[length(h)]][['Confirmed']] %>% sum
h[[length(h)-1]][['Confirmed']] %>% sum
h[[length(h)]][['Confirmed']] %>% sum
(h[[length(h)]][['Confirmed']] %>% sum)/(h[[length(h)-1]][["Confirmed"]] %>% sum())
inUS$confirms[nrow(inUS)-1]
inUS$confirms[nrow(inUS)]
inUS$confirms[nrow(inUS)]/ inUS$confirms[nrow(inUS)-1]
source('C:/Users/Anantha/R/Personal/COVID-19-Analysis/Analysis.R')
source('C:/Users/Anantha/R/Personal/COVID-19-Analysis/Analysis.R')
source('C:/Users/Anantha/R/Personal/COVID-19-Analysis/Analysis.R')
todayInMarch
source('C:/Users/Anantha/R/Personal/COVID-19-Analysis/Analysis.R')
todayInMarch <- as.numeric(substring(date(),9,10))
todayInMarch
day <- ifelse(todayinMarch > 9 , str_c("0",1:(todayInMarch-1) ), 1:(todayInMarch-1))
source('C:/Users/Anantha/R/Personal/COVID-19-Analysis/Analysis.R')
1:(todayInMarch-1)
source('C:/Users/Anantha/R/Personal/COVID-19-Analysis/Analysis.R')
source('C:/Users/Anantha/R/Personal/COVID-19-Analysis/Analysis.R')
source('C:/Users/Anantha/R/Personal/COVID-19-Analysis/Analysis.R')
source('C:/Users/Anantha/R/Personal/COVID-19-Analysis/Analysis.R')
h[[length(h)]] %>% filter(`Country/Region` ==  "US") %>% ggplot(mapping = aes(x = `Country/Region`,y = Confirmed)) +
facet_wrap(~`Province/State`) +
geom_bar(stat = 'identity') + coord_flip()
inUS$confirms[nrow(inUS)-7]
inUS$confirms[nrow(inUS)-14]
inUS$confirms[nrow(inUS)]
inUS$deaths[nrow(inUS)]
inUS$recovers[nrow(inUS)]
inUS$confrims[nrow(inUS)]
inUS$confirms[nrow(inUS)]
source('C:/Users/Anantha/R/Personal/COVID-19-Analysis/Analysis.R')
mean(USrates)
USrates
library(tidyverse)
library(data.table)
library(lubridate)
source("Analysis.R")
library(tidyverse)
library(data.table)
library(lubridate)
source("Analysis.R")
earth
earth[nrow(earth)]
earth[nrow(earth),]
h[[length(h)]] %>% colnames
earth[nrow(earth),-day]
earth[nrow(earth),-`day``]
earth[nrow(earth),-`day`]
earth[nrow(earth),-1*day]
earth[nrow(earth),-1*"day"]
earth[nrow(earth),-1]
#Active Cases
h[[length(h)]] %>% group_by(`Country/Region`) %>%
summarize(confirms = sum(Confirmed,na.rm = T),
deaths = sum(Deaths,na.rm = T),
recovers = sum(Recovered,na.rm = T)) %>%
mutate(active = confirms-deaths-recovers) %>% rbind(earth[nrow(earth,-1)])
#Active Cases
h[[length(h)]] %>% group_by(`Country/Region`) %>%
summarize(confirms = sum(Confirmed,na.rm = T),
deaths = sum(Deaths,na.rm = T),
recovers = sum(Recovered,na.rm = T)) %>%
mutate(active = confirms-deaths-recovers) %>% rbind(earth[nrow(earth),-1])
#Active Cases
h[[length(h)]] %>% group_by(`Country/Region`) %>%
summarize(confirms = sum(Confirmed,na.rm = T),
deaths = sum(Deaths,na.rm = T),
recovers = sum(Recovered,na.rm = T)) %>%
mutate(active = confirms-deaths-recovers) %>% rbind(earth[nrow(earth),-1])
#Active Cases
h[[length(h)]] %>% group_by(`Country/Region`) %>%
summarize(confirms = sum(Confirmed,na.rm = T),
deaths = sum(Deaths,na.rm = T),
recovers = sum(Recovered,na.rm = T)) %>%
rbind(earth[nrow(earth),-1]) %>%  mutate(active = confirms-deaths-recovers) %>%
filter(confirms > 1000) %>% View
#Active Cases
h[[length(h)]] %>% group_by(`Country/Region`) %>%
summarize(confirms = sum(Confirmed,na.rm = T),
deaths = sum(Deaths,na.rm = T),
recovers = sum(Recovered,na.rm = T)) %>%
rbind(list("Earth",earth[nrow(earth),-1])) %>%  mutate(active = confirms-deaths-recovers) %>%
filter(confirms > 1000) %>% View
earth[nrow(earth),-1]
earth[nrow(earth),]
#Active Cases
h[[length(h)]] %>% group_by(`Country/Region`) %>%
summarize(confirms = sum(Confirmed,na.rm = T),
deaths = sum(Deaths,na.rm = T),
recovers = sum(Recovered,na.rm = T)) %>%
rbind(list(earth[nrow(earth),])) %>%  mutate(active = confirms-deaths-recovers) %>%
filter(confirms > 1000) %>% View
#Active Cases
h[[length(h)]] %>% group_by(`Country/Region`) %>%
summarize(confirms = sum(Confirmed,na.rm = T),
deaths = sum(Deaths,na.rm = T),
recovers = sum(Recovered,na.rm = T)) %>%
rbind(earth[nrow(earth),]) %>%  mutate(active = confirms-deaths-recovers) %>%
filter(confirms > 1000) %>% View
colnames(earthRecent)[1]
#Active Cases
earthRecent <- earth[nrow(earth)]
colnames(earthRecent)[1]
#Active Cases
earthRecent <- earth[nrow(earth),]
colnames(earthRecent)[1]
earthRecent[1,1]
h[[length(h)]] %>% group_by(`Country/Region`) %>%
summarize(confirms = sum(Confirmed,na.rm = T),
deaths = sum(Deaths,na.rm = T),
recovers = sum(Recovered,na.rm = T)) %>%
rbind(earthRecent) %>%  mutate(active = confirms-deaths-recovers) %>%
filter(confirms > 1000) %>% View
colnames(earthRecent)[1] <- "Country/Region"
earthRecent[1,1] <- "Earth"
h[[length(h)]] %>% group_by(`Country/Region`) %>%
summarize(confirms = sum(Confirmed,na.rm = T),
deaths = sum(Deaths,na.rm = T),
recovers = sum(Recovered,na.rm = T)) %>%
rbind(earthRecent) %>%  mutate(active = confirms-deaths-recovers) %>%
filter(confirms > 1000) %>% View
#Active Cases
earthRecent <- earth[nrow(earth),]
colnames(earthRecent)[1] <- "Country/Region"
earthRecent[1,1] <- "---Worldwide---"
h[[length(h)]] %>% group_by(`Country/Region`) %>%
summarize(confirms = sum(Confirmed,na.rm = T),
deaths = sum(Deaths,na.rm = T),
recovers = sum(Recovered,na.rm = T)) %>%
rbind(earthRecent) %>%  mutate(active = confirms-deaths-recovers) %>%
filter(confirms > 1000) %>% View
summarySoFar <- h[[length(h)]] %>% group_by(`Country/Region`) %>%
summarize(confirms = sum(Confirmed,na.rm = T),
deaths = sum(Deaths,na.rm = T),
recovers = sum(Recovered,na.rm = T)) %>%
rbind(earthRecent) %>%  mutate(active = confirms-deaths-recovers) %>%
filter(confirms > 1000)
#Active Cases
earthRecent <- earth[nrow(earth),]
colnames(earthRecent)[1] <- "Country/Region"
earthRecent[1,1] <- "---Worldwide Total---"
summarySoFar <- h[[length(h)]] %>% group_by(`Country/Region`) %>%
summarize(confirms = sum(Confirmed,na.rm = T),
deaths = sum(Deaths,na.rm = T),
recovers = sum(Recovered,na.rm = T)) %>%
rbind(earthRecent) %>%  mutate(active = confirms-deaths-recovers) %>%
filter(confirms > 1000)
print(str_c("As of:  ", date()))
# print(str_c("Worldwide = ", earth[['confirms']][[nrow(earth)]]," cases-------One Week Ago = ",earth[['confirms']][[nrow(earth)-7]]))
# print(str_c("China = ",earth[['confirms']][[nrow(earth)]] - notChina[['confirms']][[nrow(notChina)]]," cases-------One Week Ago = ",earth[['confirms']][[nrow(earth)-7]] - notChina[['confirms']][[nrow(notChina)-7]]))
# print(str_c("Italy = ", inItaly[['confirms']][[nrow(earth)]]," cases-------One Week Ago = ",inItaly[['confirms']][[nrow(inItaly)-7]]))
# print(str_c("US = ", inUS[['confirms']][[nrow(earth)]]," cases-------One Week Ago = ",inUS[['confirms']][[nrow(inUS)-7]]))
summarySoFar
source('C:/Users/Anantha/R/Personal/COVID-19-Analysis/Models/Model_Predictions.R')
setwd("C:/Users/Anantha/R/Personal/COVID-19-Analysis")
source('C:/Users/Anantha/R/Personal/COVID-19-Analysis/Models/Model_Predictions.R')
USpredictions %>% ggplot(mapping = aes(x = day,color = model)) +
geom_line(mapping = aes(y = value)) + labs(x = "Days since January 22nd", y = "Log of US population",
title = "3 model predictions for when #Confirmed = US population")
#Making Models
support <- 0:365
us <- 330415717
world <- 7770219335
############US Population####################
#Model Predictions for US:
logUSpop <- rep(log(us),length(support))
USmodel1 <- lm(log(confirms) ~ day , data = c$US)
USmodel2 <- lm(log(confirms) ~ day, data = (c$US %>% slice((nrow(c$US)-7):(nrow(c$US)))) )
USmodel3 <- lm(log(confirms) ~ day, data = (c$US %>% slice((nrow(c$US)-14):(nrow(c$US)))))
USmodel4 <- lm(log(confirms) ~ day, data = (c$US %>% slice((nrow(c$US)-21):(nrow(c$US)))))
f1 <- function(x){return(USmodel1$coefficients[1] + USmodel1$coefficients[2]*x)}
f2 <- function(x){return(USmodel2$coefficients[1] + USmodel2$coefficients[2]*x)}
f3 <- function(x){return(USmodel3$coefficients[1] + USmodel3$coefficients[2]*x)}
f4 <- function(x){return(USmodel4$coefficients[1] + USmodel4$coefficients[2]*x)}
USpredictions <- data.frame(matrix(nrow = length(support),ncol = 6))
USpredictions[[1]] <- support
USpredictions[[2]] <- logUSpop
USpredictions[[3]] <- f1(support)
USpredictions[[4]] <- f2(support)
USpredictions[[5]] <- f3(support)
USpredictions[[6]] <- f4(support)
colnames(USpredictions) <- c("day","US_population","timeline","last1Week","last2Weeks","last3Weeks")
USpredictions <- USpredictions %>% pivot_longer(cols = c("US_population","timeline","last1Week","last2Weeks","last3Weeks"),names_to = "model")
################## Model prediciton for the World #################
logWorld <- rep(log(world),length(support))
Wmodel1 <- lm(log(confirms) ~ day , data = earth)
Wmodel2 <- lm(log(confirms) ~ day, data = (earth %>% slice((nrow(earth)-7):(nrow(earth)))))
Wmodel3 <- lm(log(confirms) ~ day , data = (earth %>% slice((nrow(earth)-14):(nrow(earth)))))
Wmodel4 <- lm(log(confirms) ~ day , data = (earth %>% slice((nrow(earth)-21):(nrow(earth)))))
Wf1 <- function(x){return(Wmodel1$coefficients[1] + Wmodel1$coefficients[2]*x)}
Wf2 <- function(x){return(Wmodel2$coefficients[1] + Wmodel2$coefficients[2]*x)}
Wf3 <- function(x){return(Wmodel3$coefficients[1] + Wmodel3$coefficients[2]*x)}
Wf4 <- function(x){return(Wmodel4$coefficients[1] + Wmodel4$coefficients[2]*x)}
Wpredictions <- data.frame(matrix(nrow = length(support),ncol = 6))
Wpredictions[[1]] <- support
Wpredictions[[2]] <- logWorld
Wpredictions[[3]] <- Wf1(support)
Wpredictions[[4]] <- Wf2(support)
Wpredictions[[5]] <- Wf3(support)
Wpredictions[[6]] <- Wf4(support)
colnames(Wpredictions) <- c("day","World_population","timeline","last1Week","last2Weeks","last3Weeks")
Wpredictions <- Wpredictions %>% pivot_longer(cols = c("World_population","timeline","last1Week","last2Weeks","last3Weeks"),names_to = "model")
USpredictions %>% ggplot(mapping = aes(x = day,color = model)) +
geom_line(mapping = aes(y = value)) + labs(x = "Days since January 22nd", y = "Log of US population",
title = "3 model predictions for when #Confirmed = US population")
USpredictions %>% ggplot(mapping = aes(x = day,color = model)) +
geom_line(mapping = aes(y = value)) + labs(x = "Days since January 22nd", y = "Log of US population",
title = "3 model predictions for when #Confirmed = US population")
print(str_c("Given all data there are " ,((log(us)-USmodel1$coefficients[1]) / (USmodel1$coefficients[2]))-nrow(earth)," days until #Confirmed = US population" ))
print(str_c("Given data from the last 3 weeks there are " ,((log(us)-USmodel4$coefficients[1]) / (USmodel4$coefficients[2]))-nrow(earth)," days until #Confirmed = US population" ))
USmodel1 <- lm(log(confirms) ~ day , data = c$US)
USmodel2 <- lm(log(confirms) ~ day, data = (c$US %>% slice((nrow(c$US)-7):(nrow(c$US)))) )
USmodel3 <- lm(log(confirms) ~ day, data = (c$US %>% slice((nrow(c$US)-14):(nrow(c$US)))))
USmodel4 <- lm(log(confirms) ~ day, data = (c$US %>% slice((nrow(c$US)-21):(nrow(c$US)))))
source('C:/Users/Anantha/R/Personal/COVID-19-Analysis/Descriptive Plots/MainPlots.R')
source('C:/Users/Anantha/R/Personal/COVID-19-Analysis/Descriptive Plots/MainPlots.R')
setwd("C:/Users/Anantha/R/Personal/COVID-19-Analysis")
source('C:/Users/Anantha/R/Personal/COVID-19-Analysis/Descriptive Plots/MainPlots.R')
